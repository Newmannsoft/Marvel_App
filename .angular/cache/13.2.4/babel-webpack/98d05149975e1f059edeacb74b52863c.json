{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/historial.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"primeng/button\";\nconst _c0 = [\"txtBuscar\"];\nexport let BuscadorComponent = /*#__PURE__*/(() => {\n  class BuscadorComponent {\n    constructor(buscarService) {\n      this.buscarService = buscarService;\n      this.isLoading = false;\n      this.onNuevoPersonaje = new EventEmitter();\n    }\n\n    onClick() {\n      const valor = this.txtBuscar.nativeElement.value;\n      this.txtBuscar.nativeElement.value = '';\n      this.buscarService.historialHeroes(valor);\n    }\n\n    ngOnInit() {}\n\n  }\n\n  BuscadorComponent.ɵfac = function BuscadorComponent_Factory(t) {\n    return new (t || BuscadorComponent)(i0.ɵɵdirectiveInject(i1.HistorialService));\n  };\n\n  BuscadorComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: BuscadorComponent,\n    selectors: [[\"app-buscador\"]],\n    viewQuery: function BuscadorComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.txtBuscar = _t.first);\n      }\n    },\n    outputs: {\n      onNuevoPersonaje: \"onNuevoPersonaje\"\n    },\n    decls: 4,\n    vars: 1,\n    consts: [[\"ngSubmit\", \"submit\", 1, \"d-flex\"], [\"type\", \"search\", \"placeholder\", \"Buscar\", \"aria-label\", \"Search\", 1, \"form-control\", \"me-2\"], [\"txtBuscar\", \"\"], [\"pButton\", \"\", \"label\", \"Buscar\", \"icon\", \"pi-spin\", \"type\", \"submit\", 1, \"p-button-danger\", \"p-button-rounded\", 3, \"loading\", \"click\"]],\n    template: function BuscadorComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵelement(1, \"input\", 1, 2);\n        i0.ɵɵelementStart(3, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function BuscadorComponent_Template_button_click_3_listener() {\n          return ctx.onClick();\n        });\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"loading\", ctx.isLoading);\n      }\n    },\n    directives: [i2.ɵNgNoValidate, i2.NgControlStatusGroup, i2.NgForm, i3.ButtonDirective],\n    styles: [\"button[_ngcontent-%COMP%]{overflow:visible}\"]\n  });\n  return BuscadorComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}